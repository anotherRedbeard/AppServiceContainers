trigger:
  branches:
    include:
    - main
  paths:
    include:
    - '*'

parameters:
- name: environmentObjects
  type: object
  default:
    - envName: 'dev'
      region:
        - abrv: 'scus'
          shortName: 'southcentralus'
    - envName: 'tst'
      region:
        - abrv: 'scus'
          shortName: 'southcentralus'

variables:
  azureServiceConnection: 'AppServiceDeploymentDemo'
  azureContainerRegistryConnection: 'AppServiceDeploymentDemoACR'
  resourceGroupName: 'red-scus-appservicedemo'
  acrResourceGroupName: 'red-scus-public-acr'
  templateFileName: 'main-deploy-app-service'
  appServiceDeploymentName: 'App_Service_Deployments'
  containerRegistryName: 'redscuspublicctreg01'
  containerImageName: 'todo-ct-api'
  version: 'v1.0'
  System.Debug: true

resources:
  repositories:
    - repository: templates
      endpoint: AnotherRedbeard
      type: github
      name: AnotherRedbeard/TheOneYamlAzDO


stages:
  - ${{ each envObj in parameters.environmentObjects }}:
    - stage: 'build_${{ envObj.envName }}_infra_stage'
      displayName: 'Build ${{ envObj.envName }} infrastructure stage'
      jobs:
        - template: jobs/app-service-bicep-deploy.yaml@templates
          parameters:
            environmentName: '${{ envObj.envName }}'
            templateFileName: '${{ variables.templateFileName }}'
            templateDirectory: 'iac'
            serviceName: 'app_service_container'
            regionAbrv: '${{ envObj.region[0].abrv }}'
            location: '${{ envObj.region[0].shortName }}'
            azureServiceConnection: '${{ variables.azureServiceConnection }}'
            resourceGroupName: '${{ variables.resourceGroupName }}-${{ envObj.envName }}'
            appServiceDeploymentName: ${{ variables.appServiceDeploymentName }}
            appContainerImageName: '${{ variables.containerRegistryName }}.azurecr.io/${{ variables.containerImageName }}:${{ variables.version }}.$(Build.BuildNumber)-${{ envObj.envName }}'
    - stage: 'build_${{ envObj.envName }}_app_container'
      displayName: 'Build ${{ envObj.envName }} app service container stage'
      jobs:
      - template: jobs/app-build-push-container.yaml@templates
        parameters:
          environmentName: '${{ envObj.envName }}'
          serviceName: 'app_service_container'
          regionAbrv:  '${{ envObj.region[0].abrv }}'
          azureContainerRegistryName: '${{ variables.azureContainerRegistryConnection }}'
          containerImageName: '${{ variables.containerImageName }}'
          imageTagName: '${{ variables.version }}.$(Build.BuildNumber)-${{ envObj.envName }}'
          dockerFilePath: '$(Build.SourcesDirectory)/src/'
    - stage: 'deploy_stage_${{ envObj.envName }}'
      displayName: 'Deploy to ${{ envObj.envName }}'
      variables:
        rgName: '${{ variables.resourceGroupName }}-${{ envObj.envName }}'
      jobs:
        - template: jobs/app-service-code-acr-mi-deploy.yaml@templates
          parameters:
            environmentName: '${{ envObj.envName }}'
            serviceName: 'app_service_container'
            regionAbrv:  '${{ envObj.region[0].abrv }}'
            containerRegistryName: '${{ variables.containerRegistryName }}'
            azureServiceConnection: '${{ variables.azureServiceConnection }}'
            resourceGroupName: '${{ variables.resourceGroupName }}-${{ envObj.envName }}'
            acrResourceGroupName: '${{ variables.acrResourceGroupName }}'
            appContainerImageName: '${{ variables.containerRegistryName }}.azurecr.io/${{ variables.containerImageName }}:${{ variables.version }}.$(Build.BuildNumber)-${{ envObj.envName }}'